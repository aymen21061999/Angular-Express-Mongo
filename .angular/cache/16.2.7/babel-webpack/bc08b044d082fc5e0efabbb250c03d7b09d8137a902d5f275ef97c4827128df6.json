{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AComponent = class AComponent {\n  constructor(http) {\n    this.http = http;\n    this.users = [];\n    this.currentUser = {};\n    this.isUpdateMode = false;\n  }\n  ngOnInit() {\n    // Fetch initial user data from your server\n    this.http.get('http://localhost:3000/users').subscribe(data => {\n      this.users = data;\n    });\n  }\n  addOrUpdateUser() {\n    if (this.isUpdateMode) {\n      // Update user\n      this.http.put(`http://localhost:3000/users/${this.currentUser.userID}`, this.currentUser).subscribe(updatedUser => {\n        const index = this.users.findIndex(user => user.userID === updatedUser.userID);\n        if (index !== -1) {\n          this.users[index] = updatedUser;\n        }\n      });\n    } else {\n      // Add user\n      this.http.post('http://localhost:3000/users', this.currentUser).subscribe(newUser => {\n        this.users.push(newUser);\n      });\n    }\n    this.currentUser = {};\n    this.isUpdateMode = false;\n  }\n  editUser(user) {\n    this.currentUser = {\n      ...user\n    };\n    this.isUpdateMode = true;\n  }\n  deleteUser(user) {\n    // Delete user\n    this.http.delete(`http://localhost:3000/users/${user.userID}`).subscribe(() => {\n      const index = this.users.indexOf(user);\n      if (index !== -1) {\n        this.users.splice(index, 1);\n      }\n    });\n  }\n  updateUser() {\n    // Update user\n    this.http.put(`http://localhost:3000/users/${this.currentUser.userID}`, this.currentUser).subscribe(updatedUser => {\n      const index = this.users.findIndex(user => user.userID === updatedUser.userID);\n      if (index !== -1) {\n        this.users[index] = updatedUser;\n      }\n    });\n    this.currentUser = {};\n    this.isUpdateMode = false;\n  }\n};\nAComponent = __decorate([Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})], AComponent);","map":{"version":3,"names":["Component","AComponent","constructor","http","users","currentUser","isUpdateMode","ngOnInit","get","subscribe","data","addOrUpdateUser","put","userID","updatedUser","index","findIndex","user","post","newUser","push","editUser","deleteUser","delete","indexOf","splice","updateUser","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class AComponent implements OnInit {\n  users: any[] = [];\n  currentUser: any = {};\n  isUpdateMode = false;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    // Fetch initial user data from your server\n    this.http.get<any[]>('http://localhost:3000/users').subscribe(data => {\n      this.users = data;\n    });\n  }\n\n  addOrUpdateUser() {\n    if (this.isUpdateMode) {\n      // Update user\n      this.http.put(`http://localhost:3000/users/${this.currentUser.userID}`, this.currentUser)\n        .subscribe(updatedUser => {\n          const index = this.users.findIndex(user => user.userID === updatedUser.userID);\n          if (index !== -1) {\n            this.users[index] = updatedUser;\n          }\n        });\n    } else {\n      // Add user\n      this.http.post('http://localhost:3000/users', this.currentUser)\n        .subscribe(newUser => {\n          this.users.push(newUser);\n        });\n    }\n    this.currentUser = {};\n    this.isUpdateMode = false;\n  }\n\n  editUser(user: any) {\n    this.currentUser = { ...user };\n    this.isUpdateMode = true;\n  }\n\n  deleteUser(user: any) {\n    // Delete user\n    this.http.delete(`http://localhost:3000/users/${user.userID}`).subscribe(() => {\n      const index = this.users.indexOf(user);\n      if (index !== -1) {\n        this.users.splice(index, 1);\n      }\n    });\n  }\n\n  updateUser() {\n    // Update user\n    this.http.put(`http://localhost:3000/users/${this.currentUser.userID}`, this.currentUser)\n      .subscribe(updatedUser => {\n        const index = this.users.findIndex(user => user.userID === updatedUser.userID);\n        if (index !== -1) {\n          this.users[index] = updatedUser;\n        }\n      });\n    this.currentUser = {};\n    this.isUpdateMode = false;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,UAAU,GAAhB,MAAMA,UAAU;EAKrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,WAAW,GAAQ,EAAE;IACrB,KAAAC,YAAY,GAAG,KAAK;EAEoB;EAExCC,QAAQA,CAAA;IACN;IACA,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,6BAA6B,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACnE,IAAI,CAACN,KAAK,GAAGM,IAAI;IACnB,CAAC,CAAC;EACJ;EAEAC,eAAeA,CAAA;IACb,IAAI,IAAI,CAACL,YAAY,EAAE;MACrB;MACA,IAAI,CAACH,IAAI,CAACS,GAAG,CAAC,+BAA+B,IAAI,CAACP,WAAW,CAACQ,MAAM,EAAE,EAAE,IAAI,CAACR,WAAW,CAAC,CACtFI,SAAS,CAACK,WAAW,IAAG;QACvB,MAAMC,KAAK,GAAG,IAAI,CAACX,KAAK,CAACY,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACJ,MAAM,KAAKC,WAAW,CAACD,MAAM,CAAC;QAC9E,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;UAChB,IAAI,CAACX,KAAK,CAACW,KAAK,CAAC,GAAGD,WAAW;;MAEnC,CAAC,CAAC;KACL,MAAM;MACL;MACA,IAAI,CAACX,IAAI,CAACe,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAACb,WAAW,CAAC,CAC5DI,SAAS,CAACU,OAAO,IAAG;QACnB,IAAI,CAACf,KAAK,CAACgB,IAAI,CAACD,OAAO,CAAC;MAC1B,CAAC,CAAC;;IAEN,IAAI,CAACd,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;EAEAe,QAAQA,CAACJ,IAAS;IAChB,IAAI,CAACZ,WAAW,GAAG;MAAE,GAAGY;IAAI,CAAE;IAC9B,IAAI,CAACX,YAAY,GAAG,IAAI;EAC1B;EAEAgB,UAAUA,CAACL,IAAS;IAClB;IACA,IAAI,CAACd,IAAI,CAACoB,MAAM,CAAC,+BAA+BN,IAAI,CAACJ,MAAM,EAAE,CAAC,CAACJ,SAAS,CAAC,MAAK;MAC5E,MAAMM,KAAK,GAAG,IAAI,CAACX,KAAK,CAACoB,OAAO,CAACP,IAAI,CAAC;MACtC,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACX,KAAK,CAACqB,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC;;IAE/B,CAAC,CAAC;EACJ;EAEAW,UAAUA,CAAA;IACR;IACA,IAAI,CAACvB,IAAI,CAACS,GAAG,CAAC,+BAA+B,IAAI,CAACP,WAAW,CAACQ,MAAM,EAAE,EAAE,IAAI,CAACR,WAAW,CAAC,CACtFI,SAAS,CAACK,WAAW,IAAG;MACvB,MAAMC,KAAK,GAAG,IAAI,CAACX,KAAK,CAACY,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACJ,MAAM,KAAKC,WAAW,CAACD,MAAM,CAAC;MAC9E,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACX,KAAK,CAACW,KAAK,CAAC,GAAGD,WAAW;;IAEnC,CAAC,CAAC;IACJ,IAAI,CAACT,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;CACD;AA9DYL,UAAU,GAAA0B,UAAA,EALtB3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW7B,UAAU,CA8DtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}