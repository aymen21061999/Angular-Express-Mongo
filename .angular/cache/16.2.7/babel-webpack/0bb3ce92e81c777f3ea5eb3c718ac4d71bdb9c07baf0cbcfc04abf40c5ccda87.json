{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_35_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editUser(user_r2));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_35_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteUser(user_r2));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.userID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.password);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'AngularExpress';\n    this.userList = [];\n    this.expresponse = \"\";\n    this.newUser = {\n      userId: '',\n      password: '',\n      emailId: ''\n    }; // Model for user data\n    this.getAllUsers();\n  }\n  getAllUsers() {\n    this.http.get('http://localhost:8000/getAll').subscribe(response => {\n      this.userList = response;\n    });\n  }\n  addUser() {\n    console.log(this.newUser);\n    this.http.post('http://localhost:8000/insert', this.newUser).subscribe(response => {\n      this.expresponse = response.toString();\n      //   this.getAllUsers(); // Refresh the user list after adding a user\n      //   this.newUser = { userId: '', password: '', emailId: '' }; // Clear the form\n      // });\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 36,\n    vars: 6,\n    consts: [[3, \"ngSubmit\"], [\"userForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"userID\"], [\"type\", \"text\", \"id\", \"userID\", \"name\", \"userID\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"submit\", 3, \"disabled\", \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"User Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.addOrUpdateUser();\n        });\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.currentUser.userID = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.currentUser.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.currentUser.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 9);\n        i0.ɵɵtext(18, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_19_listener() {\n          return ctx.updateUser();\n        });\n        i0.ɵɵtext(20, \"Update\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"h2\");\n        i0.ɵɵtext(22, \"User List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"table\")(24, \"thead\")(25, \"tr\")(26, \"th\");\n        i0.ɵɵtext(27, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"tbody\");\n        i0.ɵɵtemplate(35, AppComponent_tr_35_Template, 12, 3, \"tr\", 11);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentUser.userID);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentUser.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.currentUser.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isUpdateMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.isUpdateMode);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_tr_35_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r4","user_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editUser","AppComponent_tr_35_Template_button_click_10_listener","ctx_r5","deleteUser","ɵɵadvance","ɵɵtextInterpolate","userID","username","password","AppComponent","constructor","http","title","userList","expresponse","newUser","userId","emailId","getAllUsers","get","subscribe","response","addUser","console","log","post","toString","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_form_ngSubmit_3_listener","addOrUpdateUser","AppComponent_Template_input_ngModelChange_8_listener","$event","currentUser","AppComponent_Template_input_ngModelChange_12_listener","AppComponent_Template_input_ngModelChange_16_listener","AppComponent_Template_button_click_19_listener","updateUser","ɵɵtemplate","AppComponent_tr_35_Template","ɵɵproperty","isUpdateMode","users"],"sources":["C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\app.component.ts","C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularExpress';\n  userList: any = [];\n  expresponse: string = \"\";\n  newUser: any = { userId: '', password: '', emailId: '' }; // Model for user data\n\n  constructor(private http: HttpClient) {\n    this.getAllUsers();\n  }\n\n  getAllUsers() {\n    this.http.get('http://localhost:8000/getAll').subscribe((response) => {\n      this.userList = response;\n    });\n  }\n\n  addUser() {\n    console.log(this.newUser);\n    this.http.post('http://localhost:8000/insert', this.newUser).subscribe((response) => {\n     this.expresponse = response.toString();\n    //   this.getAllUsers(); // Refresh the user list after adding a user\n    //   this.newUser = { userId: '', password: '', emailId: '' }; // Clear the form\n    // });\n  }\n}\n","<div>\n  <h2>User Form</h2>\n  <form #userForm=\"ngForm\" (ngSubmit)=\"addOrUpdateUser()\">\n    <div class=\"form-group\">\n      <label for=\"userID\">User ID</label>\n      <input type=\"text\" id=\"userID\" name=\"userID\" [(ngModel)]=\"currentUser.userID\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"currentUser.username\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"currentUser.password\" required>\n    </div>\n    <button type=\"submit\" [disabled]=\"isUpdateMode\">Add</button>\n    <button type=\"submit\" [disabled]=\"!isUpdateMode\" (click)=\"updateUser()\">Update</button>\n  </form>\n\n  <h2>User List</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>User ID</th>\n        <th>Username</th>\n        <th>Password</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{ user.userID }}</td>\n        <td>{{ user.username }}</td>\n        <td>{{ user.password }}</td>\n        <td>\n          <button (click)=\"editUser(user)\">Edit</button>\n          <button (click)=\"deleteUser(user)\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}