{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction AppComponent_tr_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_36_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateUser);\n    });\n    i0.ɵɵtext(9, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_36_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteUser);\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.emailId);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'AngularExpress';\n    this.userList = [];\n    this.expresponse = \"\";\n  }\n  getAllUsers() {\n    this.http.get('http://localhost:8000/getAll').subscribe(response => {\n      this.userList = response;\n      console.log(this.userList);\n    });\n  }\n  addUser(udata) {\n    //console.log(udata);\n    //console.log(udata.value);\n    //this.userList.push(udata.value);\n    this.http.post('http://localhost:8000/addUsers', udata.value).subscribe(response => {\n      this.expresponse = response.toString();\n    });\n    //console.log(response);\n  }\n\n  deleteUser(userId) {\n    if (confirm('Are you sure you want to delete this user?')) {\n      this.http.delete('http://localhost:8000/delete', {\n        body: {\n          uid: userId\n        }\n      }).subscribe(response => {\n        console.log(response);\n        this.getAllUsers();\n      });\n    }\n  }\n  updateUser(user) {\n    const updatedUserData = {\n      userId: user.userId,\n      password: user.password,\n      emailId: user.emailId\n    };\n    this.http.put('http://localhost:8000/update', updatedUserData).subscribe(response => {\n      this.expresponse = response.toString();\n      this.getAllUsers(); // Optionally, you can update the user list after updating\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 38,\n    vars: 2,\n    consts: [[2, \"background-color\", \"aquamarine\"], [3, \"ngSubmit\"], [\"userData\", \"ngForm\"], [\"type\", \"text\", \"name\", \"userId\", \"ngModel\", \"\"], [\"type\", \"text\", \"name\", \"password\", \"ngModel\", \"\"], [\"type\", \"email\", \"name\", \"emailId\", \"ngModel\", \"\"], [\"type\", \"submit\", \"value\", \"Add User\"], [\"type\", \"button\", \"value\", \"Get User\", 3, \"click\"], [\"border\", \"1\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Angular Express\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"b\");\n        i0.ɵɵtext(3, \"Enter user's data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_5_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.addUser(_r0));\n        });\n        i0.ɵɵtext(7, \" User Id \");\n        i0.ɵɵelement(8, \"input\", 3)(9, \"br\");\n        i0.ɵɵtext(10, \" Password \");\n        i0.ɵɵelement(11, \"input\", 4)(12, \"br\");\n        i0.ɵɵtext(13, \" Email Id \");\n        i0.ɵɵelement(14, \"input\", 5)(15, \"br\")(16, \"input\", 6);\n        i0.ɵɵtext(17, \"\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(18, \"input\", 7);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_18_listener() {\n          return ctx.getAllUsers();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"label\");\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"br\")(23, \"br\");\n        i0.ɵɵelementStart(24, \"h2\");\n        i0.ɵɵtext(25, \"User Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"table\", 8)(27, \"tr\")(28, \"th\");\n        i0.ɵɵtext(29, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Email ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Actions\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(36, AppComponent_tr_36_Template, 12, 3, \"tr\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵtextInterpolate(ctx.expresponse);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterOutlet, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_tr_36_Template_button_click_8_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","updateUser","AppComponent_tr_36_Template_button_click_10_listener","ctx_r5","deleteUser","ɵɵadvance","ɵɵtextInterpolate","user_r2","userId","password","emailId","AppComponent","constructor","http","title","userList","expresponse","getAllUsers","get","subscribe","response","console","log","addUser","udata","post","value","toString","confirm","delete","body","uid","user","updatedUserData","put","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","AppComponent_Template_form_ngSubmit_5_listener","_r6","_r0","ɵɵreference","AppComponent_Template_input_click_18_listener","ɵɵtemplate","AppComponent_tr_36_Template","ɵɵproperty"],"sources":["C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\app.component.ts","C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";    //import\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularExpress';\n  userList : any =[];\n  data : any;\n  expresponse : string=\"\";\n  constructor(private http : HttpClient){\n  }\n  getAllUsers(){\n    this.http.get('http://localhost:8000/getAll').subscribe((response)=>{\n      this.userList = response;\n      console.log(this.userList);\n    });\n  }\n  addUser(udata : any){\n    //console.log(udata);\n    //console.log(udata.value);\n    //this.userList.push(udata.value);\n    this.http.post('http://localhost:8000/addUsers',udata.value).subscribe((response)=>{\n    this.expresponse=response.toString();  \n    }); \n    //console.log(response);\n    \n  }\n\n  deleteUser(userId: string) {\n    if (confirm('Are you sure you want to delete this user?')) {\n      this.http.delete('http://localhost:8000/delete', { body: { uid: userId } }).subscribe((response) => {\n        console.log(response);\n        this.getAllUsers();\n      });\n    }\n  }\n \n  updateUser(user: any) {\n    const updatedUserData = {\n      userId: user.userId, // Use \"userId\"\n      password: user.password, // Include the updated data\n      emailId: user.emailId,\n    };\n \n    this.http.put('http://localhost:8000/update', updatedUserData).subscribe((response) => {\n      this.expresponse = response.toString();\n      this.getAllUsers(); // Optionally, you can update the user list after updating\n    });\n  }\n  \n}\n","<!---\n<h1 style=\"background-color: aquamarine;\">Angular Express</h1>\n<b>Enter user's data</b><br>\n<form #userData=\"ngForm\" (ngSubmit) = 'addUser(userData)'>\n  User Id <input type=\"text\" name=\"userId\" ngModel/><br>\n  Password <input type=\"text\" name=\"password\" ngModel/><br>\n  Email Id <input type=\"email\" name=\"emailId\" ngModel/><br>\n  <input type=\"submit\" value=\"Add User\" />&nbsp;&nbsp;\n  <input type=\"button\" value=\"Get User\" (click)=\"getAllUsers()\"/>\n</form>\n<br><label>{{this.expresponse}}</label><br><br>\n<h2>User Data</h2>\n \n<table border=\"1\">\n  <tr>\n    <th>User ID</th>\n    <th>Password</th>\n    <th>Email ID</th>\n    \n  </tr>\n  <tr *ngFor=\"let user of userList\">\n    <td>{{ user.uid }}</td>\n    <td>{{ user.password }}</td>\n    <td>{{ user.emailId }}</td>\n  </tr>\n</table>\n<router-outlet></router-outlet>\n\n-->\n\n<h1 style=\"background-color: aquamarine;\">Angular Express</h1>\n<b>Enter user's data</b><br>\n<form #userData=\"ngForm\" (ngSubmit)='addUser(userData)'>\n  User Id <input type=\"text\" name=\"userId\" ngModel /><br>\n  Password <input type=\"text\" name=\"password\" ngModel /><br>\n  Email Id <input type=\"email\" name=\"emailId\" ngModel /><br>\n  <input type=\"submit\" value=\"Add User\" />&nbsp;&nbsp;\n  <input type=\"button\" value=\"Get User\" (click)=\"getAllUsers()\" />\n</form>\n<br>\n<label>{{ expresponse }}</label>\n<br><br>\n<h2>User Data</h2>\n\n<table border=\"1\">\n  <tr>\n    <th>User ID</th>\n    <th>Password</th>\n    <th>Email ID</th>\n    <th>Actions</th> <!-- Add a column for actions -->\n  </tr>\n  <tr *ngFor=\"let user of userList\">\n    <td>{{ user.userId }}</td>\n    <td>{{ user.password }}</td>\n    <td>{{ user.emailId }}</td>\n    <td>\n      <!-- Add update and delete buttons for each user -->\n      <button (click)=\"updateUser\">Update</button>\n      <button (click)=\"deleteUser\">Delete</button>\n    </td>\n  </tr>\n</table>\n<router-outlet></router-outlet>\n"],"mappings":";;;;;;;;ICmDEA,EAAA,CAAAC,cAAA,SAAkC;IAC5BD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IAEMD,EAAA,CAAAI,UAAA,mBAAAC,oDAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAAT,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,UAAA;IAAA,EAAoB;IAACX,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC5CH,EAAA,CAAAC,cAAA,kBAA6B;IAArBD,EAAA,CAAAI,UAAA,mBAAAQ,qDAAA;MAAAZ,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAM,MAAA,GAAAb,EAAA,CAAAS,aAAA;MAAA,OAAAT,EAAA,CAAAU,WAAA,CAAAG,MAAA,CAAAC,UAAA;IAAA,EAAoB;IAACd,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAN1CH,EAAA,CAAAe,SAAA,GAAiB;IAAjBf,EAAA,CAAAgB,iBAAA,CAAAC,OAAA,CAAAC,MAAA,CAAiB;IACjBlB,EAAA,CAAAe,SAAA,GAAmB;IAAnBf,EAAA,CAAAgB,iBAAA,CAAAC,OAAA,CAAAE,QAAA,CAAmB;IACnBnB,EAAA,CAAAe,SAAA,GAAkB;IAAlBf,EAAA,CAAAgB,iBAAA,CAAAC,OAAA,CAAAG,OAAA,CAAkB;;;AD/C1B,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,KAAK,GAAG,gBAAgB;IACxB,KAAAC,QAAQ,GAAQ,EAAE;IAElB,KAAAC,WAAW,GAAU,EAAE;EAEvB;EACAC,WAAWA,CAAA;IACT,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,8BAA8B,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;MAClE,IAAI,CAACL,QAAQ,GAAGK,QAAQ;MACxBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACJ;EACAQ,OAAOA,CAACC,KAAW;IACjB;IACA;IACA;IACA,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,gCAAgC,EAACD,KAAK,CAACE,KAAK,CAAC,CAACP,SAAS,CAAEC,QAAQ,IAAG;MACnF,IAAI,CAACJ,WAAW,GAACI,QAAQ,CAACO,QAAQ,EAAE;IACpC,CAAC,CAAC;IACF;EAEF;;EAEAvB,UAAUA,CAACI,MAAc;IACvB,IAAIoB,OAAO,CAAC,4CAA4C,CAAC,EAAE;MACzD,IAAI,CAACf,IAAI,CAACgB,MAAM,CAAC,8BAA8B,EAAE;QAAEC,IAAI,EAAE;UAAEC,GAAG,EAAEvB;QAAM;MAAE,CAAE,CAAC,CAACW,SAAS,CAAEC,QAAQ,IAAI;QACjGC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAI,CAACH,WAAW,EAAE;MACpB,CAAC,CAAC;;EAEN;EAEAhB,UAAUA,CAAC+B,IAAS;IAClB,MAAMC,eAAe,GAAG;MACtBzB,MAAM,EAAEwB,IAAI,CAACxB,MAAM;MACnBC,QAAQ,EAAEuB,IAAI,CAACvB,QAAQ;MACvBC,OAAO,EAAEsB,IAAI,CAACtB;KACf;IAED,IAAI,CAACG,IAAI,CAACqB,GAAG,CAAC,8BAA8B,EAAED,eAAe,CAAC,CAACd,SAAS,CAAEC,QAAQ,IAAI;MACpF,IAAI,CAACJ,WAAW,GAAGI,QAAQ,CAACO,QAAQ,EAAE;MACtC,IAAI,CAACV,WAAW,EAAE,CAAC,CAAC;IACtB,CAAC,CAAC;EACJ;EAAC,QAAAkB,CAAA,G;qBA5CUxB,YAAY,EAAArB,EAAA,CAAA8C,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZ5B,YAAY;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCuBzBxD,EAAA,CAAAC,cAAA,YAA0C;QAAAD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC9DH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAAAH,EAAA,CAAA0D,SAAA,SAAI;QAC5B1D,EAAA,CAAAC,cAAA,iBAAwD;QAA/BD,EAAA,CAAAI,UAAA,sBAAAuD,+CAAA;UAAA3D,EAAA,CAAAM,aAAA,CAAAsD,GAAA;UAAA,MAAAC,GAAA,GAAA7D,EAAA,CAAA8D,WAAA;UAAA,OAAY9D,EAAA,CAAAU,WAAA,CAAA+C,GAAA,CAAAxB,OAAA,CAAA4B,GAAA,CAAiB;QAAA,EAAC;QACrD7D,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAA0D,SAAA,eAA2C;QACnD1D,EAAA,CAAAE,MAAA,kBAAS;QAAAF,EAAA,CAAA0D,SAAA,gBAA6C;QACtD1D,EAAA,CAAAE,MAAA,kBAAS;QAAAF,EAAA,CAAA0D,SAAA,gBAA6C;QACd1D,EAAA,CAAAE,MAAA,qBACxC;QAAAF,EAAA,CAAAC,cAAA,gBAAgE;QAA1BD,EAAA,CAAAI,UAAA,mBAAA2D,8CAAA;UAAA,OAASN,GAAA,CAAA9B,WAAA,EAAa;QAAA,EAAC;QAA7D3B,EAAA,CAAAG,YAAA,EAAgE;QAElEH,EAAA,CAAA0D,SAAA,UAAI;QACJ1D,EAAA,CAAAC,cAAA,aAAO;QAAAD,EAAA,CAAAE,MAAA,IAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAChCH,EAAA,CAAA0D,SAAA,UAAI;QACJ1D,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAElBH,EAAA,CAAAC,cAAA,gBAAkB;QAEVD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAChBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACjBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACjBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAElBH,EAAA,CAAAgE,UAAA,KAAAC,2BAAA,iBASK;QACPjE,EAAA,CAAAG,YAAA,EAAQ;QACRH,EAAA,CAAA0D,SAAA,qBAA+B;;;QAtBxB1D,EAAA,CAAAe,SAAA,IAAiB;QAAjBf,EAAA,CAAAgB,iBAAA,CAAAyC,GAAA,CAAA/B,WAAA,CAAiB;QAWD1B,EAAA,CAAAe,SAAA,IAAW;QAAXf,EAAA,CAAAkE,UAAA,YAAAT,GAAA,CAAAhC,QAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}