{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \".././backend-access.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction MongoComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"td\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.uid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.emailid);\n  }\n}\nexport class MongoComponent {\n  constructor(http, baccess) {\n    this.http = http;\n    this.baccess = baccess;\n    this.title = 'angularexpress';\n    this.userList = [];\n    this.expresponse = \" \";\n  }\n  getAllUsers() {\n    this.userList = this.baccess.getAllUsers();\n  }\n  addUser(udata) {\n    this.expresponse = this.baccess.addUser(udata);\n  }\n  static #_ = this.ɵfac = function MongoComponent_Factory(t) {\n    return new (t || MongoComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.BackendAccessService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MongoComponent,\n    selectors: [[\"app-mongo\"]],\n    decls: 34,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"userData\", \"ngForm\"], [\"type\", \"text\", \"name\", \"uid\", \"ngModel\", \"\"], [\"type\", \"number\", \"name\", \"password\", \"ngModel\", \"\"], [\"type\", \"email\", \"name\", \"emailid\", \"ngModel\", \"\"], [\"type\", \"submit\", \"value\", \"Add user\"], [\"type\", \"button\", \"value\", \"Get user\", 3, \"click\"], [\"border\", \"1\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function MongoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"b\");\n        i0.ɵɵtext(1, \"Enter Contact details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function MongoComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.addUser(_r0));\n        });\n        i0.ɵɵtext(5, \" Name \");\n        i0.ɵɵelement(6, \"input\", 2)(7, \"br\");\n        i0.ɵɵtext(8, \" Mobile No \");\n        i0.ɵɵelement(9, \"input\", 3)(10, \"br\");\n        i0.ɵɵtext(11, \" EmailId \");\n        i0.ɵɵelement(12, \"input\", 4)(13, \"br\")(14, \"input\", 5);\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"click\", function MongoComponent_Template_input_click_15_listener() {\n          return ctx.getAllU();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"label\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\")(20, \"br\");\n        i0.ɵɵelementStart(21, \"h2\");\n        i0.ɵɵtext(22, \"User Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"table\", 7)(24, \"tr\")(25, \"th\");\n        i0.ɵɵtext(26, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\");\n        i0.ɵɵtext(28, \"Mobile No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"th\");\n        i0.ɵɵtext(30, \"EmailId\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(31, MongoComponent_tr_31_Template, 8, 3, \"tr\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"p\");\n        i0.ɵɵtext(33, \"Contact us works!\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(18);\n        i0.ɵɵtextInterpolate(ctx.expresponse);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","user_r2","uid","password","emailid","MongoComponent","constructor","http","baccess","title","userList","expresponse","getAllUsers","addUser","udata","_","ɵɵdirectiveInject","i1","HttpClient","i2","BackendAccessService","_2","selectors","decls","vars","consts","template","MongoComponent_Template","rf","ctx","ɵɵlistener","MongoComponent_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","MongoComponent_Template_input_click_15_listener","getAllU","ɵɵtemplate","MongoComponent_tr_31_Template","ɵɵproperty"],"sources":["C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\mongo\\mongo.component.ts","C:\\Frontend Concepts\\ANGULAR\\AngularExpressMongo\\src\\app\\mongo\\mongo.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BackendAccessService } from '.././backend-access.service';\n \n@Component({\n  selector: 'app-mongo',\n  templateUrl: './mongo.component.html',\n  styleUrls: ['./mongo.component.css']\n})\nexport class MongoComponent {\n \n \n  title = 'angularexpress';\n  userList : any =[];\n  data : any;\n  expresponse : string = \" \";\n  constructor(private http : HttpClient, private baccess : BackendAccessService ){\n  }\n  getAllUsers(){\n    this.userList = this.baccess.getAllUsers();\n  }\n \n  addUser(udata : any){\n    this.expresponse = this.baccess.addUser(udata);\n   \n  }\n}","<b>Enter Contact details</b><br>\n<form #userData=\"ngForm\" (ngSubmit)='addUser(userData)'>\n  Name <input type=\"text\" name=\"uid\" ngModel /><br>\n  Mobile No <input type=\"number\" name=\"password\" ngModel /><br>\n  EmailId <input type=\"email\" name=\"emailid\" ngModel /><br>\n \n  <input type=\"submit\" value=\"Add user\" />\n \n \n  <input type=\"button\" value=\"Get user\" (click)=\"getAllU()\"/>\n <!-- <input type=\"button\" value=\"Update user\" (click)=\"updateUser(1)\"/> -->\n \n \n</form>\n<br><label>{{this.expresponse}}</label><br><br>\n<!-- User Data -->\n<h2>User Data</h2>\n \n \n<table border=\"1\">\n  <tr>\n    <th>Name</th>\n    <th>Mobile No</th>\n    <th>EmailId</th>\n   \n    <!--<th>Actions</th> -->\n  </tr>\n  <tr *ngFor=\"let user of userList\">\n    <td>{{ user.uid }}</td>\n    <td>{{ user.password }}</td>\n    <td>{{ user.emailid }}</td>\n   \n    <td>\n    <!--  <button (click)=\"editUser(user)\">Edit</button> -->\n    <!-- <button (click)=\"deleteUser(user)\">Delete</button> -->\n    </td>\n  </tr>\n</table>\n \n \n \n \n<p>Contact us works!</p>\n"],"mappings":";;;;;;;IC2BEA,EAAA,CAAAC,cAAA,SAAkC;IAC5BD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAE3BH,EAAA,CAAAI,SAAA,SAGK;IACPJ,EAAA,CAAAG,YAAA,EAAK;;;;IARCH,EAAA,CAAAK,SAAA,GAAc;IAAdL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAC,GAAA,CAAc;IACdR,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAE,QAAA,CAAmB;IACnBT,EAAA,CAAAK,SAAA,GAAkB;IAAlBL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAG,OAAA,CAAkB;;;ADrB1B,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAiB,EAAUC,OAA8B;IAAzD,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,OAAO,GAAPA,OAAO;IAJtD,KAAAC,KAAK,GAAG,gBAAgB;IACxB,KAAAC,QAAQ,GAAQ,EAAE;IAElB,KAAAC,WAAW,GAAY,GAAG;EAE1B;EACAC,WAAWA,CAAA;IACT,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACF,OAAO,CAACI,WAAW,EAAE;EAC5C;EAEAC,OAAOA,CAACC,KAAW;IACjB,IAAI,CAACH,WAAW,GAAG,IAAI,CAACH,OAAO,CAACK,OAAO,CAACC,KAAK,CAAC;EAEhD;EAAC,QAAAC,CAAA,G;qBAhBUV,cAAc,EAAAX,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAxB,EAAA,CAAAsB,iBAAA,CAAAG,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdhB,cAAc;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCT3BlC,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,4BAAqB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAAAH,EAAA,CAAAI,SAAA,SAAI;QAChCJ,EAAA,CAAAC,cAAA,iBAAwD;QAA/BD,EAAA,CAAAoC,UAAA,sBAAAC,iDAAA;UAAArC,EAAA,CAAAsC,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAxC,EAAA,CAAAyC,WAAA;UAAA,OAAYzC,EAAA,CAAA0C,WAAA,CAAAP,GAAA,CAAAhB,OAAA,CAAAqB,GAAA,CAAiB;QAAA,EAAC;QACrDxC,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAI,SAAA,eAAwC;QAC7CJ,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAI,SAAA,eAA+C;QACzDJ,EAAA,CAAAE,MAAA,iBAAQ;QAAAF,EAAA,CAAAI,SAAA,gBAA6C;QAKrDJ,EAAA,CAAAC,cAAA,gBAA2D;QAArBD,EAAA,CAAAoC,UAAA,mBAAAO,gDAAA;UAAA,OAASR,GAAA,CAAAS,OAAA,EAAS;QAAA,EAAC;QAAzD5C,EAAA,CAAAG,YAAA,EAA2D;QAK7DH,EAAA,CAAAI,SAAA,UAAI;QAAAJ,EAAA,CAAAC,cAAA,aAAO;QAAAD,EAAA,CAAAE,MAAA,IAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAAAH,EAAA,CAAAI,SAAA,UAAI;QAE3CJ,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGlBH,EAAA,CAAAC,cAAA,gBAAkB;QAEVD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACbH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAIlBH,EAAA,CAAA6C,UAAA,KAAAC,6BAAA,gBASK;QACP9C,EAAA,CAAAG,YAAA,EAAQ;QAKRH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,yBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;QA5BbH,EAAA,CAAAK,SAAA,IAAoB;QAApBL,EAAA,CAAAM,iBAAA,CAAA6B,GAAA,CAAAlB,WAAA,CAAoB;QAaRjB,EAAA,CAAAK,SAAA,IAAW;QAAXL,EAAA,CAAA+C,UAAA,YAAAZ,GAAA,CAAAnB,QAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}